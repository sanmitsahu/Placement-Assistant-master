<li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques0"><strong>Question 1. What Is Angular?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><ul>
<li>Angular is a most popular web development framework for developing mobile apps as well as desktop applications.</li>
<li>Angular framework is also utilized in the cross platform mobile development called IONIC and so it is not limited to web apps only.</li>
<li>Angular is an open source framework written and maintained by angular team at Google and the Father of Angular is Misko Hevery.</li>
<li>Angular is written in TypeScript and so it comes with all the capabilities that typescript offers.</li>
</ul></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques1"><strong>Question 2. What Is Architecture Overview Of Angular?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p class="MsoNormal"><strong>Angular Architecture Overview</strong> :</p>
<p class="MsoNormal">Angular is a most popular web development framework for developing mobile apps as well as desktop applications.</p>
<p class="MsoNormal">Angular framework is also utilized in the cross platform mobile development called IONIC and so it is not limited to web apps only.</p>
<p class="MsoNormal">Angular is an open source framework written and maintained by angular team at Google and the Father of Angular is Misko Hevery.</p>
<p class="MsoNormal">The bootstrapping process creates the components listed in the bootstrap array and inserts each one into the browser (DOM)</p>
<p class="MsoNormal"><span style="mso-spacerun: yes;"> </span>you can identify the seven main building blocks of an Angular Application.</p>
<ol>
<li>Component</li>
<li>Templates</li>
<li>Metadata</li>
<li>Data Binding</li>
<li>Directives</li>
<li>Services</li>
<li>Dependency Injection</li>
</ol>
<p class="MsoNormal"> The basic building blocks of an Angular application are NgModules, which provide a compilation context for components. </p>
<p class="MsoNormal"> Angular app is defined by a set of NgModules and it always has at least a root module that enables bootstrapping, and many more feature modules. </p>
<ol>
<li>Components define Template views</li>
<li>Components use services</li>
</ol>
<p class="MsoNormal">The Angular Module (NgModules) helps us to organize an application into connected blocks of functionality.</p>
<p class="MsoNormal">The NgModule properties for the minimum “AppModule” generated by the CLI which are follow as -</p>
<p class="MsoNormal"><strong><span style="mso-spacerun: yes;"> </span>Declarations —</strong> Use to declare the application components.</p>
<p class="MsoNormal"><span style="mso-spacerun: yes;"> </span><strong>Imports —</strong>Every application must import BrowserModule to run the app in a browser.</p>
<p class="MsoNormal"><strong><span style="mso-spacerun: yes;"> </span>Providers —</strong> There are none to start.</p>
<p class="MsoNormal"><strong><span style="mso-spacerun: yes;"> </span>Bootstrap —</strong> This is a root AppComponent that Angular creates and inserts into the index.html host web page.</p></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques2"><strong>Question 3. How To Update Angular 6 To Angular 7?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p class="MsoNormal">For updating Angular 6 to Angular 7,</p>
<p class="MsoNormal"><strong>you should use a command:</strong></p>
<p><strong> <span style="font-size: 11.0pt; line-height: 115%; font-family: 'Calibri','sans-serif'; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;">ng update @angular/cli @angular/core</span></strong></p></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques3"><strong>Question 4. What Is Urlsegment Interface In Angular 7?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p class="MsoNormal"><strong>UrlSegment Interface :</strong></p>
<p class="MsoNormal">UrlSegment interface represents a single URL segment and the constructor, properties, and methods look like below UrlSegment class i.e.</p>
<p class="MsoNormal">class UrlSegment {</p>
<p class="MsoNormal">constructor(path: string, parameters: {...})</p>
<p class="MsoNormal">path: string</p>
<p class="MsoNormal">parameters: {...}</p>
<p class="MsoNormal">toString(): string</p>
<p class="MsoNormal">}</p>
<p class="MsoNormal"> <span style="font-family: Calibri, sans-serif; font-size: 11pt;">The UrlSegment is a part of a URL between the two slashes and it contains a path and matrix parameters associated with the segment.</span></p></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques4"><strong>Question 5. What Is Angular Compatibility Compiler (ngcc) In Angular 7?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p class="MsoNormal"><strong>The ngcc Angular node_module compatibility compiler :</strong></p>
<ul>
<li>The ngcc is a tool which "upgrades" node_module compiled with non-ivy ngc into ivy compliant format.</li>
<li> This compiler will convert node_modules compiled with Angular Compatibility Compiler (ngcc), into node_modules which appear to have been compiled with TSC compiler transformer (ngtsc) and this compiler conversions will allow such “legacy” packages to be used by the Ivy rendering engine.</li>
<li> <span style="font-family: Calibri, sans-serif; font-size: 11pt;">TSC transformer which removes and converts @Pipe, @Component, @Directive and @NgModule to the corresponding definePipe, defineComponent, defineDirective and defineInjector.</span> </li>
</ul></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques5"><strong>Question 6. What Is Do Bootstrap (ng Do Bootstrap ) In Angular 7?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p class="MsoNormal"><strong>Do Bootstrap Interface</strong> :</p>
<p class="MsoNormal">Angular 7 added a new life-cycle hook that is called ng Do Bootstrap and an interface that is called Do Bootstrap.</p>
<p class="MsoNormal"><strong>Example:</strong></p>
<p class="MsoNormal">//ng Do Bootstrap - Life-Cycle Hook Interface</p>
<p class="MsoNormal">classApp Module implements Do Bootstrap {</p>
<p class="MsoNormal"> ng Do Bootstrap(appRef: ApplicationRef) {</p>
<p class="MsoNormal">appRef.bootstrap(AppComponent);</p>
<p class="MsoNormal"><span style="mso-spacerun: yes;">  </span>}</p>
<p class="MsoNormal">}</p></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques6"><strong>Question 7. What Is Xmb?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p class="MsoNormal">The XMB is basically a key value pairs with no deeper structure. It does have a mechanism for named placeholders, with descriptions and examples. The<span style="mso-spacerun: yes;">  </span>messages for any given other language must be correspond 1:1.</p></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques7"><strong>Question 8. What Is Xmb Placeholders?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p><span style="font-size: 11.0pt; line-height: 115%; font-family: 'Calibri','sans-serif'; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;">The placeholders have one example tag () and a text node. The text node will be used as the original value from the placeholder, while the example will represent a dummy value.</span></p></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques8"><strong>Question 9. What's New In Angular 7?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p class="MsoNormal">The major release and expanding to the entire platform including-</p>
<ul>
<li style="text-align: justify;">  Core framework,</li>
<li style="text-align: justify;">  Angular Material,</li>
<li style="text-align: justify;">  CLI</li>
</ul></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques9"><strong>Question 10. What Is Ivy Rendering Engine In Angular 7?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p><strong>Ivy Rendering Engine :</strong></p>
<p class="MsoNormal">The Ivy rendering engine is a new backwards-compatible Angular renderer main focused on the following.</p>
<ul>
<li>Speed Improvements</li>
<li>Size Reduction</li>
<li>Increased Flexibility</li>
</ul>
<p>The template functions for creating dynamically views are no longer nested functions inside each other.</p>
<p class="MsoNormal">Now we use for loops that are nested inside other loops.</p>
<p class="MsoNormal"><strong>Example:</strong></p>
<p class="MsoNormal">functionAppComponent(rf: RenderFlags, ctx: AppComponent) {</p>
<p class="MsoNormal">functionulTemplateFun(rf1: RenderFlags, ctx0: any) {</p>
<p class="MsoNormal">functionliTemplateFun(rf1: RenderFlags, ctx1: any) {...}</p>
<p class="MsoNormal"><span style="mso-spacerun: yes;">  </span>}</p>
<p class="MsoNormal">}</p></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques10"><strong>Question 11. What Is Key Value Pipe In Angular 7?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p> <strong>Key Value Pipe:</strong></p>
<p class="MsoNormal">Change you object into an array of key value pairs that output array will be ordered by keys.</p>
<p> By default it will be by Unicode point value.</p>
<p><strong>Syntax:</strong></p>
<p> {{your input expression | key value [:compareFn] }}</p></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques11"><strong>Question 12. What Are The Core Dependencies Of Angular 7?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p class="MsoNormal"><strong>Core Dependencies:</strong></p>
<p class="MsoNormal">There are two types of core dependencies: RxJS and TypeScript.</p>
<p class="MsoNormal"><strong>RxJS 6.3:</strong></p>
<p class="MsoNormal">RxJS version 6.3 is used by Angular 7. It has no changes in the version from Angular 6</p>
<p class="MsoNormal"><strong>TypeScript 3.1:</strong></p>
<p><span style="font-size: 11.0pt; line-height: 115%; font-family: 'Calibri','sans-serif'; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;">TypeScript version 3.1 is used by Angular 7. It is the upgrade from the version2.9 of Angular 6.</span></p></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques12"><strong>Question 13. Explain Bazel?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p>Bazel is a test tool just like the Make, Maven and Gradle and it is an open-source build. Bazel utilizes the readable and high-level build language. It handles the project in a great number of languages and builds the product for a large number of platforms. Moreover, it supports multiple users and large codebases over several repositories.</p></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques13"><strong>Question 14. How To Generate A Class In Angular 7 Using Cli ?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p><strong>Create a class using below code:</strong></p>
<p>ng generate class [options]<br/>ng g class [options]<br/>Whose name refers the name of a class.<br/>Options refer to the project name, spec value in Boolean or type of a file.</p></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques14"><strong>Question 15. How Can You Create A Decorator In Angular?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p>There are two ways to register decorators in Angular.</p>
<p><strong>These are:</strong></p>
<ul>
<li>$provide.decorator </li>
<li>module.decorator</li>
</ul></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques15"><strong>Question 16. How Can You Handle Events In Angular 7?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p>There are various methods to handle events in Angular 7.</p>
<p><strong>These are:</strong></p>
<p>1. Binding to user input events: You are able to use the Angular event binding to answer to DOM event. User input triggers so many DOM events. It is a very effective method to get the input from the user.</p>
<p><strong>For example:</strong></p>
<p>&lt;button (click)="onClickMe()"&gt;Click me!&lt;/button&gt;</p>
<p>2. Get user input from the event object: DOM carries a cargo of the information that possibly is valuable for the components. Here is an example to show you the keyup event of an input box to obtain the user's input after every stroke</p>
<p><strong>Example</strong>:</p>
<p>src/app/keyup.components.ts (template v.1) </p>
<p>content_copy </p>
<p>template: ` </p>
<p>&lt;input (keyup)="onKey($event)"&gt; </p>
<p>&lt;p&gt;{{values}} &lt;/p&gt;</p>
<p>3. Key event filtering: Every keystroke is heard by the (keyup) event handler. The enter keys matter the most as it provides the sign of the user that he has done with the typing. The most efficient method of eliminating the noise is to look after every $event.keyCode and the action is taken only when the enter key is pressed.</p></p>
</li><br><br><li class="quesans mb-20">
<p><a class="accordion-trigger ques" id="ques16"><strong>Question 17. What Is The Difference Between Structural And Attribute Directives In Angular?</strong></a></p>
<p><span class="ans"><strong>Answer :</strong></span><p><strong>Structural directives:</strong></p>
<p>These are used to alter the DOM layout by removing and adding DOM elements. It is far better in changing the structure of the view. Examples of Structural directives are NgFor and Ngif.</p>
<p><strong>Attribute Directives:</strong></p>
<p>These are being used as characteristics of elements. For example, a directive such as built-in NgStyle in the template Syntax guide is an attribute directive.</p></p>
</li><br><br>